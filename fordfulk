#!/bin/bash

progname="fordfulk"
output_extension="fordfulked"

if [ ! "$#" -eq 3 ]; then
	echo "$progname <Graph_path>.flwnt <Source_node_id> <Sink_node_id>"
	echo -e "\t\tOR"
	echo "$progname <Graph_path.flwnt> <Source_node_id> <Sink_node_id> <Output_graph_path>"
	echo "If you want the output_file to be auto generated with the same path.$output_extension"
	exit 1
fi

make > /dev/null

if [ ! "$?" -eq 0 ]; then
	echo "[!] Error with make"
	exit 1
fi

if [ ! -f "$1" ] || [ ! -r "$1" ] ; then
	echo "'$1' not a regular file or not readable"	
fi

# Fetch the bytecode executable
elf_prog=$(ls -A1 | grep ftest)

if [ "$#" -eq 4 ]; then
	./$elf_prog "$1" "$2" "$3" "$4"
else
	./$elf_prog "$1" "$2" "$3" "$1.$output_extension"
fi


if [ ! "$?" -eq 0 ]; then
	echo "[!] Error with '$elf_prog'"
	exit 1
fi

# Export the two graphs in SVG format with dot command

inputfilename=$(echo $1 | sed -r "s/.*\/([^/]*$)/\1/g")

dot -Tsvg "$1.dot" > "./graphs/SVGs/$inputfilename.svg"
if [ "$#" -eq 4 ]; then
	outputfilename=$(echo $4 | sed -r "s/.*\/([^/]*$)/\1/g")
	dot -Tsvg "$4.dot" > "./graphs/SVGs/$outputfilename.svg"
	firefox ./graphs/SVGs/$inputfilename.svg ./graphs/SVGs/$outputfilename.svg
else
	dot -Tsvg "$1.$output_extension.dot" > "./graphs/SVGs/$inputfilename.$output_extension.svg"
	#rm -f ./graphs/$1.$output_extension.dot
	firefox ./graphs/SVGs/$inputfilename.svg ./graphs/SVGs/$inputfilename.$output_extension.svg
fi
		
#rm -f ./graphs/*.dot


